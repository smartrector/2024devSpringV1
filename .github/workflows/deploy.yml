name: Deploy EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4

      - name: JDK 17 버전 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: 현재 디렉토리 출력
        run: pwd

      - name: 현재 디렉토리 파일 목록 확인
        run: ls -al

      - name: application.yml 파일 만들기
        run: |
          mkdir -p ./src/main/resources/
          echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.yml

      - name: application.yml 파일 생성 확인
        run: |
          echo "Current directory after creating application.yml:"
          pwd
          echo "Files in src/main/resources after creating application.yml:"
          ls -al ./src/main/resources/

      - name: gradlew 파일에 실행 권한 부여
        run: chmod +x ./gradlew

      - name: 테스트 및 빌드하기
        run: ./gradlew bootWar

      - name: AWS Resource에 접근할 수 있게 AWS credentials 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: ECR에 로그인하기
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker 이미지 생성
        run: docker build -t crud-server .

      - name: Docker 이미지에 Tag 붙이기
        run: docker tag instagram-server ${{ steps.login-ecr.outputs.registry }}/crud-server:latest

      - name: ECR에 Docker 이미지 Push하기
        run: docker push ${{ steps.login-ecr.outputs.registry }}/crud-server:latest
